<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zpt.shop.main.mapper.EvaluateMapper">

	<!-- ********** ResultMap ********** -->
	<resultMap type="evaluate" id="resultMap">
		<id property="id" column="id" />
		<result property="orderId" column="orderId" />		
		<result property="skuId" column="skuId" />	
		<result property="userId" column="userId" />
		<result property="evaluate" column="evaluate" />	
		<result property="evaluateTime" column="evaluateTime" />
		<result property="name" column="name" />		
		<result property="starttime" column="starttime" />		
		<result property="endtime" column="endtime" />	
	</resultMap>
	
	<sql id="queryCondition">
		where 1 = 1
		<if test="obj.name != null and obj.name != ''">
			and user.name like CONCAT('%',#{obj.name},'%')
		</if>
		<if test="obj.evaluate != null and obj.evaluate != ''">
			and evaluate.evaluate like CONCAT('%',#{obj.evaluate},'%')
		</if>	
		<if test="obj.starttime != null and obj.starttime != '' and obj.endtime != null and obj.endtime != ''">
			and (evaluate.evaluateTime &gt; #{obj.starttime} and evaluate.evaluateTime &lt; #{obj.endtime})
		</if>
		<if test="search != null and search != ''">
			and (evaluate.userId like CONCAT('%',#{search},'%') or 
			evaluate.evaluate like CONCAT('%',#{search},'%'))
		</if>		
	</sql>
	
	<select id="listEvaluate" resultMap="resultMap" parameterType="query">
		<include refid="com.zpt.shop.main.mapper.CommonMapper.beginSplitPage"/>
		select evaluate.id as id,evaluate.evaluate as evaluate,evaluate.orderId as orderId,
		evaluate.evaluatetime as evaluatetime,user.name as name
		from t_evaluate as evaluate
		left join t_user as user on evaluate.userId = user.id		
		<include refid="queryCondition"/>
		<include refid="com.zpt.shop.main.mapper.CommonMapper.endSplitPage"/>
	</select>
	
	<select id="countEvaluate" resultType="java.lang.Integer" parameterType="query">
		select count(evaluate.id) from t_evaluate as evaluate
		left join t_user as user on evaluate.userId = user.id
		<include refid="queryCondition"/>
	</select>
	
	<delete id="deleteEvaluate">
		delete from t_evaluate where id in (${ids})	
	</delete>
	
	<insert id="addEvaluate">
		insert into t_evaluate (orderId, skuId, userId, evaluate, evaluateTime) 
		values (#{orderId}, #{skuId}, #{userId}, #{evaluate}, #{evaluateTime})
	</insert>
	
	<select id="getEvaluateByUserId" resultMap="resultMap">
		select evaluate.*, t.val from t_evaluate as evaluate
		left join (select *, GROUP_CONCAT(value) as val from t_goods_pro_val GROUP BY skuid) as t
		on evaluate.skuid = t.skuid
	</select>
	
	<select id="getEvaluateByGoodsId" resultMap="resultMap">
		select evaluate.*, t.val, sku.goodsid, user.name from t_evaluate as evaluate
		left join (select *, GROUP_CONCAT(value) as val from t_goods_pro_val GROUP BY skuid) as t
		on evaluate.skuid = t.skuid
		left join t_goods_sku as sku 
		on evaluate.skuid = sku.id 
		left join t_user as user
		on evaluate.userId = user.id
		where sku.goodsid = #{goodsId}
	</select>
	
	<select id="getEvaluate" resultMap="resultMap">
		select * from t_evaluate 
		where orderId = #{orderId} and skuId = #{skuId} and userId = #{userId}
	</select>

</mapper>
